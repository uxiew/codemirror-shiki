const e=["js","jsx","ts","tsx","html","vue","svelte","php","res"],s=["source.ts","source.js"],t="L:source.js -comment -string, L:source.js -comment -string, L:source.jsx -comment -string,  L:source.js.jsx -comment -string, L:source.ts -comment -string, L:source.tsx -comment -string, L:source.rescript -comment -string, L:source.vue -comment -string, L:source.svelte -comment -string, L:source.php -comment -string, L:source.rescript -comment -string",n={"L:source":{patterns:[{match:"<",name:"invalid.illegal.bad-angle-bracket.html"}]}},c="es-tag-css",i=[{begin:"(?i)(\\s?\\/\\*\\s?(css|inline-css)\\s?\\*\\/\\s?)(`)",beginCaptures:{1:{name:"comment.block"}},end:"(`)",patterns:[{include:"source.ts#template-substitution-element"},{include:"source.css"},{include:"inline.es6-htmlx#template"}]},{begin:"(?i)(\\s*(css|inline-css))(`)",beginCaptures:{1:{name:"comment.block"}},end:"(`)",patterns:[{include:"source.ts#template-substitution-element"},{include:"source.css"},{include:"inline.es6-htmlx#template"},{include:"string.quoted.other.template.js"}]},{begin:"(?i)(?<=\\s|\\,|=|:|\\(|\\$\\()\\s{0,}(((\\/\\*)|(\\/\\/))\\s?(css|inline-css)[ ]{0,1000}\\*?\\/?)[ ]{0,1000}$",beginCaptures:{1:{name:"comment.line"}},end:"(`).*",patterns:[{begin:"(\\G)",end:"(`)"},{include:"source.ts#template-substitution-element"},{include:"source.css"}]},{begin:"(\\${)",beginCaptures:{1:{name:"entity.name.tag"}},end:"(})",endCaptures:{1:{name:"entity.name.tag"}},patterns:[{include:"source.ts#template-substitution-element"},{include:"source.js"}]}],o="inline.es6-css",m={fileTypes:e,injectTo:s,injectionSelector:t,injections:n,name:c,patterns:i,scopeName:o};export{m as default,e as fileTypes,s as injectTo,t as injectionSelector,n as injections,c as name,i as patterns,o as scopeName};
